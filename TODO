A very general (and likely quite off) intended schedule for versions (and work 
    that needs completion prior to hitting said version)...

0.4			Sept/Oct 2003.
	* option code in diffball, patcher, differ, and convert_delta
	* function that is format aware, handles magic sig's.
	* seperate my modifications of gdiff format into v5, and enable a 
	  specific v4 spec.
	* md5 support in cfile- basically flag the cfile at opening, add func 
	  for finalizing/retrieving md5.  Refactor cfile (buffering system) 
	  for compression support to be added.
	* code cleanup.  EG, add extern global verbosity option for control of
	  printf statements, start adding better definitions throughout code 
	  for compilation (eg via compile flags/options disabling certain 
	  sections of code).
	* work out a solution for handling md5's in file format- basically 
	  handle the goofy nature of some formats (bdelta's lack of a complete 
	  set of reconstruction commands, trailing null).  Enable checking of 
	  md5's if they're included in file (xdelta format).
	* start enabling checking of returned values.  Basically start cleaning
	  out the use of abort's and exit's, and use appropriate return values.

0.41			Oct/Nov 2003
	* bsdiff support, possibly included into 0.4.
	* xdelta write support- could do it as of pre-0.4, although md5 support
	  is needed, and the lovely serialsource memory allocation problem- 
	  basically the unknown 8 bytes sandwiched between add data and control
	  block.  Contact bdharring@wisc.edu if anyone has ideas/better 
	  solution for the serialsource stored memory requirement.
	  No clue why the hell that is stored, but it is.
	* check into, and support if viable, past xdelta formats.
	  likely the serialsource issue listed above is going to be 
	  problematic- I'm betting that had a hand in the breaking of backwards
	  compatability in xdelta...
	* optimizations of buffering system.  Do something about the 
	  duplication of buffered data between cfile and differencing alg.
	  Possibly an 'cfileExposeBuffer' type command, that returns a const 
	  unsigned char * to the internal cfile buffer.
	* refactor memalias for differing alg.  Basically adjustment of 
	  returned values, although exposeBuffer (above) might solve this.
	  I don't like the buffer window into a buffer.  Pointless...
	* have working compression support in cfile.  Not saying it be'll 
	  great, just saying have it working.

0.50/0.60		Nov/Dec 2003
	* add a correcting one pass differencing alg.
	* possibly add flag to correcting algs, to flag correcting support 
	  on/off (correcting basically allows for correction (duh))- although 
	  correcting does slow things down (maybe not by much), possibly give 
	  them (user/dev) the option?
	* xdelta style alg?
	* bdelta style alg?
	* possibly adjust formats (encoding/decoding) such that they are 
	  multiple functions... eg, attempt to make it such that the needed 
	  command space (CommandBuffer) can be optimized down, so that it 
	  doesn't require the entire set of delta commands to be stored in mem.

0.75			Jan-Mar 2004
	* have at least a dev version of gnuDiff support (unified and context).
	  Note that is for a single patch, eg-non recursive.
	  for recursive, basically need a for loop opening cfiles as needed.

0.80			March 2004
	* gnudiff support working, at least in applying non-recursive patch.
	* dev version of vcdiff.

0.90			June 2004
	* assuming good design/api, this won't be hard, but begin *initial*
	  creation of a library api.  Subject to change obviously by 1.00, but
	  have something fairly concrete ready to roll.
	* optimize existing formats, differencing algs, buffering system.
	* reiterating, *OPTIMIZE BUFFERING SYSTEM*.

1.00			July 2004
	* enter into a full production release.
	* locked down library api (obviously).

1.0x			Post July 2004
	* whatever optimizations/bug fixes needed.

Tentative versionning and time release obviously...
Dang crystal ball...
