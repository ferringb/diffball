#!/usr/bin/perl
use POSIX qw (ceil);
open(my $fh1, $ARGV[0]) or die("shite, couldn't fine ".$ARGV[0]."\n");
binmode($fh1);
my $file1;
#file1
my @returns;
my @labels= (
	'name', 'mode', 'uid', 'gid', 'size', 'mtime', 'chksum', 'typeflag', 'linkname', 'magic','version','uname','gname','devmaj','devmin','prefix');
my $tar_unpack_header= 'A100 A8 A8 A8 A12 A12 A8 A1 A100 A6 A2 A32 A32 A8 A8 A155 x12';

#foreach my $fh ($fh1) {
	my @array;
	my $temp;
my $offset=($ARGV[1] + ($ARGV[2] ne ''? ceil($ARGV[2]/512)+1:0))*512;
#$ARGV[1] * 512;
#	read($fh1, $temp, 512);
	sysseek($fh1, $offset, SEEK_SET);
	sysread($fh1, $temp, 512);

	@array = unpack($tar_unpack_header, $temp);
	foreach my $num (1,2,3,4,5,6,13,14){
		$array[$num] = oct($array[$num]);
	}

	push(@returns, \@array);
#}
$_=length($returns[0][0]);	
my $size=length($_)+6;
printf "%${size}s:'%i'\n", 'loc', $offset/512;
for(my $x=0; $x<scalar(@{$returns[0]});$x++){
	if($x==0) {
	printf("%${size}s:'%s'\n",$labels[$x].'('.length($returns[0]->[0]).')',
	$returns[0]->[0]);
	}else {
	print sprintf("%${size}s",$labels[$x]).":'".$returns[0]->[$x]."'\n";
}
#	print "line(".($x+1)."):'".$returns[1]->[$x]."'\n";
}
#
#printf "%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s|%s\n",substr($data,0,99),substr($data,100,107),substr($data,108,115),substr($data,116,123),substr($data,124,135),substr($data,136,147),substr($data,148,155),substr($data,156,167),substr($data,168,175),substr($data,176,
